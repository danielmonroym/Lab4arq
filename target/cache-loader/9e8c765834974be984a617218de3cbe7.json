{"remainingRequest":"C:\\Users\\Usuario\\Documents\\NetBeansProjects\\Concesionario4\\node_modules\\thread-loader\\dist\\cjs.js??ref--4-2!C:\\Users\\Usuario\\Documents\\NetBeansProjects\\Concesionario4\\node_modules\\ts-loader\\index.js??ref--4-3!C:\\Users\\Usuario\\Documents\\NetBeansProjects\\Concesionario4\\node_modules\\tslint-loader\\index.js!C:\\Users\\Usuario\\Documents\\NetBeansProjects\\Concesionario4\\src\\main\\webapp\\app\\entities\\usuario\\usuario-update.tsx","dependencies":[{"path":"C:\\Users\\Usuario\\Documents\\NetBeansProjects\\Concesionario4\\src\\main\\webapp\\app\\entities\\usuario\\usuario-update.tsx","mtime":1585594141082},{"path":"C:\\Users\\Usuario\\Documents\\NetBeansProjects\\Concesionario4\\node_modules\\react-hot-loader\\webpack.js","mtime":1505850161000},{"path":"C:\\Users\\Usuario\\Documents\\NetBeansProjects\\Concesionario4\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1585592814268},{"path":"C:\\Users\\Usuario\\Documents\\NetBeansProjects\\Concesionario4\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Usuario\\Documents\\NetBeansProjects\\Concesionario4\\node_modules\\ts-loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\Usuario\\Documents\\NetBeansProjects\\Concesionario4\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["import * as tslib_1 from \"tslib\";\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Row, Col, Label } from 'reactstrap';\r\nimport { AvForm, AvGroup, AvInput, AvField } from 'availity-reactstrap-validation';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, translate } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { getEntities as getFacturas } from 'app/entities/factura/factura.reducer';\r\nimport { getEntity, updateEntity, createEntity, reset } from './usuario.reducer';\r\nvar UsuarioUpdate = /** @class */ (function (_super) {\r\n    tslib_1.__extends(UsuarioUpdate, _super);\r\n    function UsuarioUpdate(props) {\r\n        var _this = _super.call(this, props) || this;\r\n        _this.saveEntity = function (event, errors, values) {\r\n            if (errors.length === 0) {\r\n                var usuarioEntity = _this.props.usuarioEntity;\r\n                var entity = tslib_1.__assign({}, usuarioEntity, values);\r\n                if (_this.state.isNew) {\r\n                    _this.props.createEntity(entity);\r\n                }\r\n                else {\r\n                    _this.props.updateEntity(entity);\r\n                }\r\n                _this.handleClose();\r\n            }\r\n        };\r\n        _this.handleClose = function () {\r\n            _this.props.history.push('/entity/usuario');\r\n        };\r\n        _this.state = {\r\n            facturaId: '0',\r\n            isNew: !_this.props.match.params || !_this.props.match.params.id\r\n        };\r\n        return _this;\r\n    }\r\n    UsuarioUpdate.prototype.componentDidMount = function () {\r\n        if (this.state.isNew) {\r\n            this.props.reset();\r\n        }\r\n        else {\r\n            this.props.getEntity(this.props.match.params.id);\r\n        }\r\n        this.props.getFacturas();\r\n    };\r\n    UsuarioUpdate.prototype.render = function () {\r\n        var _a = this.props, usuarioEntity = _a.usuarioEntity, facturas = _a.facturas, loading = _a.loading, updating = _a.updating;\r\n        var isNew = this.state.isNew;\r\n        return (React.createElement(\"div\", null,\r\n            React.createElement(Row, { className: \"justify-content-center\" },\r\n                React.createElement(Col, { md: \"8\" },\r\n                    React.createElement(\"h2\", { id: \"concesionario4App.usuario.home.createOrEditLabel\" },\r\n                        React.createElement(Translate, { contentKey: \"concesionario4App.usuario.home.createOrEditLabel\" }, \"Create or edit a Usuario\")))),\r\n            React.createElement(Row, { className: \"justify-content-center\" },\r\n                React.createElement(Col, { md: \"8\" }, loading ? (React.createElement(\"p\", null, \"Loading...\")) : (React.createElement(AvForm, { model: isNew ? {} : usuarioEntity, onSubmit: this.saveEntity },\r\n                    !isNew ? (React.createElement(AvGroup, null,\r\n                        React.createElement(Label, { for: \"id\" },\r\n                            React.createElement(Translate, { contentKey: \"global.field.id\" }, \"ID\")),\r\n                        React.createElement(AvInput, { id: \"usuario-id\", type: \"text\", className: \"form-control\", name: \"id\", required: true, readOnly: true }))) : null,\r\n                    React.createElement(AvGroup, null,\r\n                        React.createElement(Label, { id: \"idLabel\", for: \"id\" },\r\n                            React.createElement(Translate, { contentKey: \"concesionario4App.usuario.id\" }, \"id\")),\r\n                        React.createElement(AvField, { id: \"usuario-id\", type: \"string\", className: \"form-control\", name: \"id\", validate: {\r\n                                required: { value: true, errorMessage: translate('entity.validation.required') },\r\n                                number: { value: true, errorMessage: translate('entity.validation.number') }\r\n                            } })),\r\n                    React.createElement(AvGroup, null,\r\n                        React.createElement(Label, { id: \"nombreLabel\", for: \"nombre\" },\r\n                            React.createElement(Translate, { contentKey: \"concesionario4App.usuario.nombre\" }, \"nombre\")),\r\n                        React.createElement(AvField, { id: \"usuario-nombre\", type: \"text\", name: \"nombre\", validate: {\r\n                                required: { value: true, errorMessage: translate('entity.validation.required') }\r\n                            } })),\r\n                    React.createElement(AvGroup, null,\r\n                        React.createElement(Label, { id: \"emailLabel\", for: \"email\" },\r\n                            React.createElement(Translate, { contentKey: \"concesionario4App.usuario.email\" }, \"email\")),\r\n                        React.createElement(AvField, { id: \"usuario-email\", type: \"text\", name: \"email\", validate: {\r\n                                required: { value: true, errorMessage: translate('entity.validation.required') }\r\n                            } })),\r\n                    React.createElement(AvGroup, null,\r\n                        React.createElement(Label, { id: \"passLabel\", for: \"pass\" },\r\n                            React.createElement(Translate, { contentKey: \"concesionario4App.usuario.pass\" }, \"pass\")),\r\n                        React.createElement(AvField, { id: \"usuario-pass\", type: \"text\", name: \"pass\", validate: {\r\n                                required: { value: true, errorMessage: translate('entity.validation.required') }\r\n                            } })),\r\n                    React.createElement(AvGroup, null,\r\n                        React.createElement(Label, { for: \"factura.id\" },\r\n                            React.createElement(Translate, { contentKey: \"concesionario4App.usuario.factura\" }, \"Factura\")),\r\n                        React.createElement(AvInput, { id: \"usuario-factura\", type: \"select\", className: \"form-control\", name: \"factura.id\" },\r\n                            React.createElement(\"option\", { value: \"\", key: \"0\" }),\r\n                            facturas\r\n                                ? facturas.map(function (otherEntity) { return (React.createElement(\"option\", { value: otherEntity.id, key: otherEntity.id }, otherEntity.id)); })\r\n                                : null)),\r\n                    React.createElement(Button, { tag: Link, id: \"cancel-save\", to: \"/entity/usuario\", replace: true, color: \"info\" },\r\n                        React.createElement(FontAwesomeIcon, { icon: \"arrow-left\" }),\r\n                        \"\\u00A0\",\r\n                        React.createElement(\"span\", { className: \"d-none d-md-inline\" },\r\n                            React.createElement(Translate, { contentKey: \"entity.action.back\" }, \"Back\"))),\r\n                    \"\\u00A0\",\r\n                    React.createElement(Button, { color: \"primary\", id: \"save-entity\", type: \"submit\", disabled: updating },\r\n                        React.createElement(FontAwesomeIcon, { icon: \"save\" }),\r\n                        \"\\u00A0\",\r\n                        React.createElement(Translate, { contentKey: \"entity.action.save\" }, \"Save\"))))))));\r\n    };\r\n    return UsuarioUpdate;\r\n}(React.Component));\r\nexport { UsuarioUpdate };\r\nvar mapStateToProps = function (storeState) { return ({\r\n    facturas: storeState.factura.entities,\r\n    usuarioEntity: storeState.usuario.entity,\r\n    loading: storeState.usuario.loading,\r\n    updating: storeState.usuario.updating\r\n}); };\r\nvar mapDispatchToProps = {\r\n    getFacturas: getFacturas,\r\n    getEntity: getEntity,\r\n    updateEntity: updateEntity,\r\n    createEntity: createEntity,\r\n    reset: reset\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UsuarioUpdate);\r\n",{"version":3,"file":"C:\\Users\\Usuario\\Documents\\NetBeansProjects\\Concesionario4\\src\\main\\webapp\\app\\entities\\usuario\\usuario-update.tsx","sourceRoot":"","sources":["C:\\Users\\Usuario\\Documents\\NetBeansProjects\\Concesionario4\\node_modules\\tslint-loader\\index.js!C:\\Users\\Usuario\\Documents\\NetBeansProjects\\Concesionario4\\src\\main\\webapp\\app\\entities\\usuario\\usuario-update.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link, RouteComponentProps } from 'react-router-dom';\nimport { Button, Row, Col, Label } from 'reactstrap';\nimport { AvForm, AvGroup, AvInput, AvField } from 'availity-reactstrap-validation';\n// tslint:disable-next-line:no-unused-variable\nimport { Translate, translate, ICrudGetAction, ICrudGetAllAction, ICrudPutAction } from 'react-jhipster';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { IRootState } from 'app/shared/reducers';\n\nimport { IFactura } from 'app/shared/model/factura.model';\nimport { getEntities as getFacturas } from 'app/entities/factura/factura.reducer';\nimport { getEntity, updateEntity, createEntity, reset } from './usuario.reducer';\nimport { IUsuario } from 'app/shared/model/usuario.model';\n// tslint:disable-next-line:no-unused-variable\nimport { convertDateTimeFromServer } from 'app/shared/util/date-utils';\nimport { mapIdList } from 'app/shared/util/entity-utils';\n\nexport interface IUsuarioUpdateProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\n\nexport interface IUsuarioUpdateState {\n  isNew: boolean;\n  facturaId: string;\n}\n\nexport class UsuarioUpdate extends React.Component<IUsuarioUpdateProps, IUsuarioUpdateState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      facturaId: '0',\n      isNew: !this.props.match.params || !this.props.match.params.id\n    };\n  }\n\n  componentDidMount() {\n    if (this.state.isNew) {\n      this.props.reset();\n    } else {\n      this.props.getEntity(this.props.match.params.id);\n    }\n\n    this.props.getFacturas();\n  }\n\n  saveEntity = (event, errors, values) => {\n    if (errors.length === 0) {\n      const { usuarioEntity } = this.props;\n      const entity = {\n        ...usuarioEntity,\n        ...values\n      };\n\n      if (this.state.isNew) {\n        this.props.createEntity(entity);\n      } else {\n        this.props.updateEntity(entity);\n      }\n      this.handleClose();\n    }\n  };\n\n  handleClose = () => {\n    this.props.history.push('/entity/usuario');\n  };\n\n  render() {\n    const { usuarioEntity, facturas, loading, updating } = this.props;\n    const { isNew } = this.state;\n\n    return (\n      <div>\n        <Row className=\"justify-content-center\">\n          <Col md=\"8\">\n            <h2 id=\"concesionario4App.usuario.home.createOrEditLabel\">\n              <Translate contentKey=\"concesionario4App.usuario.home.createOrEditLabel\">Create or edit a Usuario</Translate>\n            </h2>\n          </Col>\n        </Row>\n        <Row className=\"justify-content-center\">\n          <Col md=\"8\">\n            {loading ? (\n              <p>Loading...</p>\n            ) : (\n              <AvForm model={isNew ? {} : usuarioEntity} onSubmit={this.saveEntity}>\n                {!isNew ? (\n                  <AvGroup>\n                    <Label for=\"id\">\n                      <Translate contentKey=\"global.field.id\">ID</Translate>\n                    </Label>\n                    <AvInput id=\"usuario-id\" type=\"text\" className=\"form-control\" name=\"id\" required readOnly />\n                  </AvGroup>\n                ) : null}\n                <AvGroup>\n                  <Label id=\"idLabel\" for=\"id\">\n                    <Translate contentKey=\"concesionario4App.usuario.id\">id</Translate>\n                  </Label>\n                  <AvField\n                    id=\"usuario-id\"\n                    type=\"string\"\n                    className=\"form-control\"\n                    name=\"id\"\n                    validate={{\n                      required: { value: true, errorMessage: translate('entity.validation.required') },\n                      number: { value: true, errorMessage: translate('entity.validation.number') }\n                    }}\n                  />\n                </AvGroup>\n                <AvGroup>\n                  <Label id=\"nombreLabel\" for=\"nombre\">\n                    <Translate contentKey=\"concesionario4App.usuario.nombre\">nombre</Translate>\n                  </Label>\n                  <AvField\n                    id=\"usuario-nombre\"\n                    type=\"text\"\n                    name=\"nombre\"\n                    validate={{\n                      required: { value: true, errorMessage: translate('entity.validation.required') }\n                    }}\n                  />\n                </AvGroup>\n                <AvGroup>\n                  <Label id=\"emailLabel\" for=\"email\">\n                    <Translate contentKey=\"concesionario4App.usuario.email\">email</Translate>\n                  </Label>\n                  <AvField\n                    id=\"usuario-email\"\n                    type=\"text\"\n                    name=\"email\"\n                    validate={{\n                      required: { value: true, errorMessage: translate('entity.validation.required') }\n                    }}\n                  />\n                </AvGroup>\n                <AvGroup>\n                  <Label id=\"passLabel\" for=\"pass\">\n                    <Translate contentKey=\"concesionario4App.usuario.pass\">pass</Translate>\n                  </Label>\n                  <AvField\n                    id=\"usuario-pass\"\n                    type=\"text\"\n                    name=\"pass\"\n                    validate={{\n                      required: { value: true, errorMessage: translate('entity.validation.required') }\n                    }}\n                  />\n                </AvGroup>\n                <AvGroup>\n                  <Label for=\"factura.id\">\n                    <Translate contentKey=\"concesionario4App.usuario.factura\">Factura</Translate>\n                  </Label>\n                  <AvInput id=\"usuario-factura\" type=\"select\" className=\"form-control\" name=\"factura.id\">\n                    <option value=\"\" key=\"0\" />\n                    {facturas\n                      ? facturas.map(otherEntity => (\n                          <option value={otherEntity.id} key={otherEntity.id}>\n                            {otherEntity.id}\n                          </option>\n                        ))\n                      : null}\n                  </AvInput>\n                </AvGroup>\n                <Button tag={Link} id=\"cancel-save\" to=\"/entity/usuario\" replace color=\"info\">\n                  <FontAwesomeIcon icon=\"arrow-left\" />\n                  &nbsp;\n                  <span className=\"d-none d-md-inline\">\n                    <Translate contentKey=\"entity.action.back\">Back</Translate>\n                  </span>\n                </Button>\n                &nbsp;\n                <Button color=\"primary\" id=\"save-entity\" type=\"submit\" disabled={updating}>\n                  <FontAwesomeIcon icon=\"save\" />\n                  &nbsp;\n                  <Translate contentKey=\"entity.action.save\">Save</Translate>\n                </Button>\n              </AvForm>\n            )}\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (storeState: IRootState) => ({\n  facturas: storeState.factura.entities,\n  usuarioEntity: storeState.usuario.entity,\n  loading: storeState.usuario.loading,\n  updating: storeState.usuario.updating\n});\n\nconst mapDispatchToProps = {\n  getFacturas,\n  getEntity,\n  updateEntity,\n  createEntity,\n  reset\n};\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype DispatchProps = typeof mapDispatchToProps;\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UsuarioUpdate);\n"]}]}